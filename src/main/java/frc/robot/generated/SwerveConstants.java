package frc.robot.generated;

import edu.wpi.first.math.geometry.Translation2d;
import edu.wpi.first.math.kinematics.SwerveDriveKinematics;
import edu.wpi.first.math.util.Units;

/**
 * Constants for swerve drive subsystem.
 * Generated by Thrifty Swerve Generator.
 * Generated on: 2025-07-17T22:32:29.693Z
 */
public final class SwerveConstants {
    // Drive base dimensions
    public static final double DRIVE_BASE_WIDTH_METERS = 0.6350;
    public static final double DRIVE_BASE_LENGTH_METERS = 0.6350;
    
    // Gear ratios
    public static final double DRIVE_GEAR_RATIO = 6.75;
    public static final double AZIMUTH_GEAR_RATIO = 25;

    // Wheel specifications
    public static final double WHEEL_DIAMETER_INCHES = 4;
    public static final double WHEEL_DIAMETER_METERS = Units.inchesToMeters(4);
    
    // Top Speed
    public static final double TOP_SPEED_MOTOR_RPM = 6000;
    public static final double TOP_SPEED_METERS_PER_SEC = 4.729;

    // Module locations from center of robot
    private static final double HALF_WIDTH = DRIVE_BASE_WIDTH_METERS / 2.0;
    private static final double HALF_LENGTH = DRIVE_BASE_LENGTH_METERS / 2.0;
    
    // Kinematics
    public static final Translation2d FRONT_LEFT_LOCATION = new Translation2d(0.3048, -0.3048);
    public static final Translation2d FRONT_RIGHT_LOCATION = new Translation2d(0.3048, 0.3048);
    public static final Translation2d BACK_LEFT_LOCATION = new Translation2d(-0.3048, -0.3048);
    public static final Translation2d BACK_RIGHT_LOCATION = new Translation2d(-0.3048, 0.3048);
    
    public static final SwerveDriveKinematics DRIVE_KINEMATICS = new SwerveDriveKinematics(
        FRONT_LEFT_LOCATION,
        FRONT_RIGHT_LOCATION,
        BACK_LEFT_LOCATION,
        BACK_RIGHT_LOCATION
    );

    // Encoder type enum - MUST be defined before ModuleConstants
    public static enum EncoderType {
        REDUX_ENCODER, SRX_MAG_ENCODER, REV_ENCODER, Thrifty_Absolute_Encoder
    }
    
    // Module constants
    public static final class ModuleConstants {
        // Front Left Module
        public static final int FRONT_LEFT_DRIVE_MOTOR_ID = 3;
        public static final int FRONT_LEFT_AZIMUTH_MOTOR_ID = 4;
        public static final double FRONT_LEFT_ENCODER_OFFSET = 3529.0;
        public static final boolean FRONT_LEFT_DRIVE_MOTOR_INVERTED = false;
        
        // Front Right Module
        public static final int FRONT_RIGHT_DRIVE_MOTOR_ID = 5;
        public static final int FRONT_RIGHT_AZIMUTH_MOTOR_ID = 6;
        public static final double FRONT_RIGHT_ENCODER_OFFSET = 747.0;
        public static final boolean FRONT_RIGHT_DRIVE_MOTOR_INVERTED = false;
        
        // Back Left Module
        public static final int BACK_LEFT_DRIVE_MOTOR_ID = 1;
        public static final int BACK_LEFT_AZIMUTH_MOTOR_ID = 2;
        public static final double BACK_LEFT_ENCODER_OFFSET = 2552.0;
        public static final boolean BACK_LEFT_DRIVE_MOTOR_INVERTED = false;
        
        // Back Right Module
        public static final int BACK_RIGHT_DRIVE_MOTOR_ID = 7;
        public static final int BACK_RIGHT_AZIMUTH_MOTOR_ID = 8;
        public static final double BACK_RIGHT_ENCODER_OFFSET = 121.2;
        public static final boolean BACK_RIGHT_DRIVE_MOTOR_INVERTED = false;
        
        // Common encoder type
        public static final EncoderType ENCODER_SELECTED = EncoderType.Thrifty_Absolute_Encoder;
    }
    
    // Gyro constants
    public static final class GyroConstants {
        public static final String GYRO_TYPE = "NavX";
    }
}